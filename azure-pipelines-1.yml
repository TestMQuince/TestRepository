# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml
schedules:
- cron: "0 0 * * 6/2"
  displayName: Daily midnight build
  branches:
    include:
    - develop

trigger: none

pool:
  vmImage: 'ubuntu-latest'

variables:
  - group: Proba

steps:
- script: echo Hello, world!
  displayName: 'Run a one-line script'

- script: |
    python -m pip install PyGithub
    echo Add other tasks to build, test, and deploy your project.
    echo See https://aka.ms/yaml
  displayName: 'Run a multi-line script'
- task: PythonScript@0
  inputs:
    scriptSource: 'inline'
    script: |
      from github import Github
      
      print($(IsEven))
      if "$(IsEven)" == "True":
        g = Github("$(NewToken)")
        repo = g.get_organization("TestMQuince").get_repo("TestRepository")
        g.get_organization("TestMQuince").get_team(4234553).set_repo_permission(repo, "push")

- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      # Write your PowerShell commands here.
      $url = "$($env:SYSTEM_TEAMFOUNDATIONCOLLECTIONURI)$env:SYSTEM_TEAMPROJECTID/_apis/distributedtask/variablegroups/1?api-version=5.0-preview.1"
      Write-Host $url

      function CreateJsonBody
      {
          $value = "\`"id\`":1,\`"type\`":\`"Vsts\`",\`"name\`":\`"Proba\`",\`"variables\`":{\`"IsEven\`":{\`"isSecret\`":false,\`"value\`":\`"False\`"}}}"
          return $value
      }

      $json = CreateJsonBody
      $credPair = "$(""):$($env:SYSTEM_ACCESSTOKEN)"
      
      $encodedCredentials = [System.Convert]::ToBase64String([System.Text.Encoding]::ASCII.GetBytes($credPair))
      
      $headers = @{ Authorization = "Basic $encodedCredentials" }

      $pipeline = Invoke-RestMethod -Uri $url -Method Put -Body $json -ContentType "application/json" -Headers $headers
      Write-Host "New Variable Value:" $pipeline.variables.IsEven.value
